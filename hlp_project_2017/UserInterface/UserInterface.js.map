{"version":3,"sources":["..\\UserInterface.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAEO;AAAA;AAoBC,8CACgD,iBAAjC,oBAAmB,uCAAnB,EAAwB,KAAxB,GAAX,iBAAC,sBAAD,CAAW,CAAiC,0DADhD;;AAGA,oDACI;AAAuC;AAAA,qCAAM,sCAAK,KAAL,EAAN,EAAgB,qCAAK,8CAAM,6CAAK,qCAAK,uCAAL,EAAS,sCAAK,uCAAL,EAAT,EAAL,SAAN,cAAL,EAAhB;AAAuE,aAAvE;;AAC3C,mBACO;AAAoB;AAApB;AAAA;AAAA;AAA6B,aAA7B,GADP,CAAI,mBAAO,MAAP,CAAJ;AADwC,SAApC,GADJ;;AAIA,wCAAsB,+BAEZ,sCAAM,MAAN,EAFY,yBAKV,mDALU,EAMV,uCANU,CAAtB;;AAQA,oDAAgB;AAAA,qCAAqB,uCAArB;AAAyB,SAAzC;;AACA,gDACI;AAAO,mCAAW,WAAX;AACX,0CAAQ,kBAAqB,4CAArB,eAAR;AADQ,SADR;;AAGA,8CAAW,mCAAX;;AACA,8CACI;AAAQ;AAE4B,kCAAyB,cAAzB,EAAxC,wDAAwC;AAF/B,SAAL,GADJ;;AAOA,wCACA;AACU;AAAA;AAAA;AACK;AAAA;;AAEH;AAAM,2CAAQ,SAAR;AACV,uCAAS,aAAT;AAJE;AAAG,aAAH;;AAKV;AAAW,SAPX;;AASA,wCACI;AAAA;AAAA;AAAA;;AAEM;AAAA,oBACe,cADf,EACiC;AAAA;AAAgB,iBADjD;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAS;AAAA,aAAT;;AAYA;AAAA,oBACK,UADL,EACiB;AAAA;AAAU,iBAD3B,UAEK,WAFL,EAEkB;AAAA;AAAS,iBAF3B,MAIE;AAAM;AACV,mCAAS,cAAT;AADO;AAJF,aAAH;;AAMV;AApBgB,SADhB;;AAxDD;AAwDM,KAxDN;;AA+EA;AAUH;AAGI,8DAAmB,qCAAnB;AACA,8DAAmB,iCAAnB;AAGA,wDAAgB,kCAAhB;AAEA,0DAGG,kBAAc;AAAA;AAAA;AAAM,SAAN,GAAd,EADA,iBADH,uDACG,CACA,CAHH;;AAMA,4CACA;AAAA;AAEiB;AAEjB;AACW,2BAAmB;AAAA,yCAA+B,sCAA/B;AAA8C,aAAjE,EAAX,iBAAC,sBAAD,CAAW;AACG,2BAAmB;AAAA,4BAAqB,sCAArB;AAAkC,aAArD,EAAd,iBAAC,6BAAD,CAAc;AAEd;AACA,wBAAoB,wDAApB;AAEA;AACA;AAA6B,SAb7B;;AAeA,8CACA;AAAA;AAAsC,SADtC;;AAEA,8CACA;AAAA;AAAqC,SADrC;;AA1CD,gDA8CsC;AAAK;AAAL;AAAC,SA9CvC;AAAA;AA8C2D,KA9C3D","file":"UserInterface.js","sourcesContent":["ï»¿namespace ARM7TDMI\r\n\r\nmodule UserInterfaceController =\r\n    open System\r\n    open System.Text\r\n    open Fable.Import\r\n    open Fable.Core.JsInterop\r\n    open Parser\r\n    open MachineState\r\n    open InstructionType\r\n    let s = \r\n        \"MOV R1 R2\r\n    ADD R2 R3 #3\r\n    MYBRANCH MVN R2 #2\r\n    CMP R13 R2 , LSL #10\r\n    LSL R6 R7 #10\r\n    ASR R8 R9 R10\r\n    ADDS R3 R13 #15\r\n    ADDSEQ R3 R13 #15\r\n    ADDLO R3 R13 #15\"\r\n\r\n    //let state = readAsm s\r\n    let init_reg = \r\n            [0..15] |> Seq.map (fun x -> (R x, x*x)) |> Map.ofSeq\r\n        \r\n    let init_memory =\r\n        let chooseAddr (m:Map<Address,Memory>) i = m.Add(Addr(i*4),Inst(Line (ALU (MOV (R 1,Reg (R 2)),false),None,None)))\r\n        seq { 0 .. 20 - 1 } \r\n            |> Seq.fold chooseAddr Map.empty\r\n    let state: MachineState = { \r\n            //PC = Addr 0 // PC is now Reg 15\r\n            END = Addr (4*20)\r\n            RegMap = init_reg\r\n            MemMap = init_memory\r\n            Flags = {N=false; Z=false; C=false; V=false}\r\n            State = RunOK\r\n        }\r\n    let getRegister i = state.RegMap.TryFind(R i)\r\n    let getMemory address = \r\n        let head = address - (address % 4)\r\n        toJson (state.MemMap.TryFind(Addr head))\r\n    let getState = toJson state.State\r\n    let getFlags = \r\n        let flags = state.Flags\r\n        //fable ignores System.Convert.ToInt32(boolean)\r\n        [flags.N; flags.Z; flags.C; flags.V] |> List.map (fun x -> match x with | true -> 1 | _ -> 0)\r\n    \r\n    \r\n    //base conversion for registers\r\n    let toBin dec = \r\n        let rec convert dec = \r\n            match dec with\r\n            | 0 | 1 -> string dec\r\n            | _ -> \r\n                let bit = string (dec % 2)\r\n                convert (dec/2) + bit\r\n        convert dec\r\n\r\n    let toHex dec = \r\n        let toArray byte = [|byte|]\r\n        let toBit (remainder: int) = \r\n            match remainder with\r\n                | remainder when remainder <= 9 -> string remainder\r\n                //| remainder when remainder <= 15 -> remainder |> (+) 55 |> System.Convert.ToByte |> toArray |> Encoding.ASCII.GetString \r\n                | 10 -> \"A\"\r\n                | 11 -> \"B\"\r\n                | 12 -> \"C\"\r\n                | 13 -> \"D\"\r\n                | 14 -> \"E\"\r\n                | 15 -> \"F\"\r\n                | _ -> \"ErrorBit\"\r\n\r\n        let rec convert dec = \r\n            match dec with\r\n            | dec when dec <= 9 -> string dec\r\n            | dec when dec <= 15 -> toBit dec\r\n            | _ -> \r\n                let bit = dec % 16 |> toBit\r\n                convert (dec/16) + bit\r\n        convert dec\r\n    \r\nmodule UserInterface = \r\n    open Fable.Core\r\n    open Fable.Core.JsInterop\r\n    open Fable.Import\r\n    open Fable.Import.Browser\r\n    open Parser\r\n    open UserInterfaceController\r\n    open MachineState\r\n    open InstructionType\r\n\r\n    Browser.console.log(\"Initialising Application...\")\r\n\r\n    //get input elements\r\n    let sourceDOMElement = document.getElementById \"sourceCode\" :?>HTMLTextAreaElement\r\n    let outputDOMElement = document.getElementById \"output\" :?>HTMLParagraphElement\r\n    \r\n    //get button elements\r\n    let executeButton = document.getElementById \"execute\" :?>HTMLButtonElement\r\n        \r\n    let splitIntoWords = \r\n        \"MOV R3 #10\".Split whiteSpace\r\n        |> Array.toList\r\n        |> List.filter ((<>) \"\")\r\n         \r\n    //controller functions\r\n    let execute() =\r\n        Browser.console.info(\"Executing Source Code...\")\r\n        //get values from input elements\r\n        let sourceCode = sourceDOMElement.value\r\n\r\n        Browser.console.info(\"Displaying Register Values...\")\r\n        [0..15] |> List.map (fun x -> Browser.console.log(\"R\",x,\"=\",(getRegister x))) |> ignore\r\n        [0..4..32] |> List.map (fun x -> Browser.console.log((getMemory x))) |> ignore\r\n\r\n        Browser.console.info(\"Displaying NZCV flags...\")\r\n        Browser.console.log(toJson getFlags)\r\n\r\n        Browser.console.info(\"Displaying Emulation Status\")\r\n        Browser.console.log(getState)\r\n\r\n    let openFile() = \r\n        Browser.console.log(\"Opening file...\");\r\n    let saveFile(saveAs: bool) = \r\n        Browser.console.log(\"Saving file...\");\r\n\r\n    //event register\r\n    executeButton.addEventListener_click(fun _ ->(execute());null)"]}