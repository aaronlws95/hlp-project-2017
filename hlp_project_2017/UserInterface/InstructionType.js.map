{"version":3,"sources":["..\\InstructionType.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAGS;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;;AAaA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;;AAMA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;;AAQA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;;AAOA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;;AAQA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA","file":"InstructionType.js","sourcesContent":["ï»¿namespace ARM7TDMI\r\n\r\nmodule InstructionType = \r\n    type Register = R of int\r\n    type Address = Addr of int\r\n    type Value = int\r\n\r\n    type RegOrLit = \r\n        | Reg of Register \r\n        | Lit of Value\r\n\r\n    type ALUInst = \r\n        | MOV of dest:Register*op1:RegOrLit\r\n        | ADD of dest:Register*op1:Register*op2:RegOrLit\r\n        | SUB of dest:Register*op1:Register*op2:RegOrLit\r\n        | MVN of dest:Register*op1:RegOrLit\r\n        | EOR of dest:Register*op1:Register*op2:RegOrLit\r\n        | RSB of dest:Register*op1:Register*op2:RegOrLit\r\n        | RSC of dest:Register*op1:Register*op2:RegOrLit\r\n        | ADC of dest:Register*op1:Register*op2:RegOrLit\r\n        | SBC of dest:Register*op1:Register*op2:RegOrLit\r\n        | BIC of dest:Register*op1:Register*op2:RegOrLit\r\n        | ORR of dest:Register*op1:Register*op2:RegOrLit\r\n\r\n    type SFInst =\r\n        | TST of dest:Register*op1:RegOrLit\r\n        | TEQ of dest:Register*op1:RegOrLit\r\n        | CMP of dest:Register*op1:RegOrLit\r\n        | CMN of dest:Register*op1:RegOrLit\r\n\r\n    type LDMdir = ED | IB | FD | IA | EA | DB | FA | DA\r\n   \r\n    type MEMInst = \r\n        | ADR of dest:Register*exp:Address*setFlag:bool\r\n        | LDRPI of dest:Register*eqExp:Address\r\n        | LDRREG of dest:Register*source:Register*offset:RegOrLit*autoIndex:RegOrLit*byte:bool\r\n        | STR of dest:Register*source:Register*offset:RegOrLit*autoIndex:RegOrLit*byte:bool \r\n        | LDM of dir:LDMdir*source:Register*regList:(Register list)*writeBack:bool\r\n        | STM of dir:LDMdir*dest:Register*regList:(Register list)*writeBack:bool\r\n\r\n    type SHIFTInst = \r\n        | LSL of dest:Register*op1:Register*op2:RegOrLit\r\n        | LSR of dest:Register*op1:Register*op2:RegOrLit\r\n        | ASR of dest:Register*op1:Register*op2:RegOrLit\r\n        | ROR of dest:Register*op1:Register*op2:RegOrLit\r\n        | RRX of op1:Register*op2:Register\r\n\r\n    type ConditionCode = | EQ | NE | CS | HS | CC | LO | MI | PL | VS | VC | HI | LS | GE | LT | GT | LE | AL \r\n\r\n    type InstructionType =\r\n        | ALU of ALUInst*setFlag:bool  \r\n        | MEM of MEMInst\r\n        | SF of SFInst\r\n        | SHIFT of SHIFTInst*setFlag:bool\r\n\r\n    //type ConditionType = Condition of ConditionCode\r\n\r\n    type InstructionLine = Line of InstructionType * SHIFTInst option * ConditionCode option\r\n\r\n    type Memory = \r\n        | Inst of InstructionLine\r\n        | Val of Value"]}